// EJML BUNDLER

plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

configurations {
	bundle
}

def ejmlVersion = '0.41'

java {
	version = '0.41'
	tasks.withType(Javadoc).all { enabled = false }
}

dependencies {
	bundle 'org.ejml:ejml-simple:0.41'
}

def bundleArchive = "${buildDir}/bundles/ejml-simple-bundle-${ejmlVersion}.jar"

task createBundleJar(type: Jar) {
    from configurations.bundle.collect { zipTree it }    
    archiveFileName = bundleArchive
}

task unpackJar(type: Copy) {
	def sourceFile = bundleArchive
	def targetDir = "${buildDir}/classes/java/main"
	
	from zipTree(sourceFile)
	into targetDir
}

classes.finalizedBy createBundleJar
createBundleJar.finalizedBy unpackJar

publishing {
    repositories {
    	mavenLocal()
        maven {
            url = version.endsWith('SNAPSHOT') ? sonatypeSnapshotsUrl : sonatypeReleasesUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    
    publications {
        maven(MavenPublication) {
        	groupId = group
            from components.java
            pom {
                description = "$projectDescription"
                url = "$projectUrl"
                inceptionYear = "$projectInceptionYear"
                organization {
                	name = "$projectVendor"
                	url  = "$projectVendorUrl"
                }
                licenses {
                    license {
                        name = "$projectLicense"
                        url  = "$projectLicenseUrl"
                    }
                }
                issueManagement {
                	system = "Github Issues"
                	url = "$projectIssues"
                }
                developers {
                    developer {
                        id = "$projectDeveloperId"
                        name = "$projectDeveloper"
                        email = "$projectDeveloperMail"
                    }
                }
                scm {
                    connection = "scm:git:$projectScm"
                    developerConnection = "scm:git:$projectScm"
                    url = "$projectUrl"
                }
            }
        }
    }
}