// LA4J SOLVER
plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'de.jjohannes.extra-java-module-info'
}

extraJavaModuleInfo {
	module("la4j-0.6.0.jar", "org.la4j", "0.6.0") {
		exports("org.la4j")
		exports("org.la4j.inversion")
		exports("org.la4j.decomposition")
	}	
}

dependencies {
    implementation project(':solver-api')
    implementation 'org.la4j:la4j:0.6.0'
}

test {
    useJUnitPlatform()
}

signing {
	if (!project.hasProperty("skipSigning")) {
	    sign configurations.archives
	}
}

publishing {
    repositories {
    	mavenLocal()
        maven {
            url = version.endsWith('SNAPSHOT') ? sonatypeSnapshotsUrl : sonatypeReleasesUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    
    publications {
        maven(MavenPublication) {
        	groupId = group
            from components.java
            pom {
                description = "$projectDescription"
                url = "$projectUrl"
                inceptionYear = "$projectInceptionYear"
                organization {
                	name = "$projectVendor"
                	url  = "$projectVendorUrl"
                }
                licenses {
                    license {
                        name = "$projectLicense"
                        url  = "$projectLicenseUrl"
                    }
                }
                issueManagement {
                	system = "Github Issues"
                	url = "$projectIssues"
                }
                developers {
                    developer {
                        id = "$projectDeveloperId"
                        name = "$projectDeveloper"
                        email = "$projectDeveloperMail"
                    }
                }
                scm {
                    connection = "scm:git:$projectScm"
                    developerConnection = "scm:git:$projectScm"
                    url = "$projectUrl"
                }
            }
        }
    }
}